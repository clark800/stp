#!/bin/sh
set -e

readonly CONFIG="${SSG_CONFIG:-.ssg}"
readonly ROOT_TITLE="${SSG_ROOT_TITLE}"
readonly TITLE_FORMAT="${SSG_TITLE_FORMAT-capitalize}"

println() {
    printf '%s\n' "$1"
}

is_function() {
    [ "$1" ] && [ "$(command -v "$1")" = "$1" ]
}

try() {
    if is_function "${1:?}"; then "$1"; else shift && try "$@"; fi
}

find_files() {
    find "$1" -name '.?*' -prune -o -type f -name "$2" -print
}

capitalize() {
    tr ' ' '\n' |
    while IFS='' read -r word; do
        printf ' %.1s' "$word" | tr '[:lower:]' '[:upper:]'
        printf '%s' "${word#?}"
    done | cut -c 2-
}

format_title() {
    if [ "${1%.*}" != "$1" ]; then
        cat
    else
        tr '_-' '  ' | ${TITLE_FORMAT:-cat}
    fi
}

get_directory_title() {
    if [ "${1%/}" = "." ]; then
        if [ "$ROOT_TITLE" ]; then
            println "$ROOT_TITLE"
        else
            basename "$(pwd)" | format_title
        fi
    else
        basename "$1" | format_title
    fi
}

get_title() {
    _fallback() { basename "$DEST_PATH" ".${DEST_PATH##*.}" | format_title; }
    try "get_${SOURCE_PATH##*.}_title" _fallback
}

input() {
    cat "${SOURCE_PATH:?}"
}

instantiate() {
    : "${GENERATOR:?}" "${TARGET:?}" "${TITLE:?}" "${DEST_PATH:?}"
    template_path="${1:+"$CONFIG/templates/$TARGET/$1.$TARGET"}"
    cat "${template_path:--}" |
        eval "printf '%s\\n' \"$(sed 's/"/\\"/g;s/`/\\`/g')\""
}

wrap() {
    _cat() { cat; }
    (instantiate header; cat; instantiate footer) |
        try "${TARGET}_transform" _cat
}

run_generator() {
    unset SOURCE_PATH DEST_PATH TITLE
    TARGET="${1:?}"
    GENERATOR="${2:?}"
    "$2"
}

import() {
    if [ -d "$1" ]; then
        for plugin in "$1"/*.sh; do
            if [ -e "$plugin" ]; then
                . "$plugin"
            fi
        done
    fi
}

main() {
    import "$CONFIG/plugins"
    import "$CONFIG/hooks"
    GENERATOR="core"
    for templates in "$CONFIG/templates"/*; do
        TARGET="${templates##*/}"
        ls "$templates" | grep -F ".main.$TARGET" | sort |
        while IFS='' read -r template_filename; do
            find_files "." "*.${template_filename%%.*}" |
            while IFS='' read -r SOURCE_PATH; do
                DEST_PATH="${SOURCE_PATH%.*}.$TARGET"
                println "${DEST_PATH#./}" >&2
                TITLE="$(get_title)"
                instantiate "${SOURCE_PATH##*.}.main" | wrap > "$DEST_PATH"
            done
        done
    done
    try post_hook :
}

cd "${1:-.}" || exit 1
main
