#!/bin/sh
set -e

ROOT_TITLE="${SSG_ROOT_TITLE}"
TITLE_FORMAT="${SSG_TITLE_FORMAT-capitalize}"
CONFIG="${SSG_CONFIG:-.ssg}"

println() {
    printf '%s\n' "$1"
}

find_files() {
    find "$1" -name '.?*' -prune -o -type f -name "$2" -print
}

capitalize() {
    tr ' ' '\n' |
    while IFS='' read -r word; do
        printf ' %.1s' "$word" | tr '[:lower:]' '[:upper:]'
        printf '%s' "${word#?}"
    done | cut -c 2-
}

format_title() {
    if [ "${1%.*}" == "$1" ]; then
        println "$1" | tr '_-' '  ' | ${TITLE_FORMAT:-cat}
    else
        println "$1"
    fi
}

get_basename_title() {
    path="${1%/}"
    basename="${path##*/}"
    if [ "$basename" == "." ]; then
        if [ "$ROOT_TITLE" ]; then
            println "$ROOT_TITLE"
        else
            format_title "$(basename "$(pwd)")"
        fi
    else
        format_title "$basename"
    fi
}

get_filename_title() {
    path="${1%.*}"
    if [ "${path##*/}" == "index" ]; then
        get_basename_title "${path%/*}"
    else
        get_basename_title "$path"
    fi
}

title() {
    get_filename_title "$dest_path"
}

instantiate() {
    eval "printf '%s\\n' \"$(sed 's/"/\\"/g;s/`/\\`/g')\""
}

instantiate_template() {
    target="$1"
    name="$2"
    dest_path="$3"
    source_path="$4"
    cat "$CONFIG/templates/$target/$name.$target" | instantiate
}

read_source() {
    cat "$source_path"
}

register_transform() {
    TRANSFORMS="$TRANSFORMS$1;"
}

apply_transforms() {
    if [ ! "$1" ]; then
        cat
    else
        "${1%%;*}" "$source_path" | apply_transforms "${1#*;}"
    fi
}

generate() {
    cat "$CONFIG/templates/$target/header.$target" \
        "$CONFIG/templates/$target/${source_path##*.}.main.$target" \
        "$CONFIG/templates/$target/footer.$target" |
        instantiate | apply_transforms "$TRANSFORMS"
}

import() {
    if [ -d "$1" ]; then
        for plugin in "$1"/*.sh; do
            if [ -e "$plugin" ]; then
                . "$plugin"
            fi
        done
    fi
}

run_hook() {
    if [ "$(command -v "$1")" == "$1" ]; then
        "$1"
    fi
}

main() {
    import "$CONFIG/plugins"
    import "$CONFIG/hooks"
    run_hook "pre_hook"
    for target_config in "$CONFIG/templates"/*; do
        TRANSFORMS=""
        target="${target_config##*/}"
        run_hook "pre_${target}_hook"
        ls "$target_config" | grep -F ".main.$target" | sort |
        while IFS='' read -r template_filename; do
            find_files "." "*.${template_filename%%.*}" |
            while IFS='' read -r source_path; do
                dest_path="${source_path%.*}.$target"
                println "${dest_path#./}" >&2
                generate > "$dest_path"
            done
        done
        run_hook "post_${target}_hook"
    done
    run_hook "post_hook"
}

cd "${1:-.}" || exit 1
main
